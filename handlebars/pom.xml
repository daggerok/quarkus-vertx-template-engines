<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0">
    <modelVersion>4.0.0</modelVersion>
    <groupId>daggerok</groupId>
    <name>${project.artifactId}</name>
    <artifactId>handlebars</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <properties>
        <encoding>UTF-8</encoding>
        <project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.parameters>true</maven.compiler.parameters>
        <compiler-plugin.version>3.8.1</compiler-plugin.version>
        <log4j.version>2.12.1</log4j.version>
        <lombok.version>1.18.1</lombok.version>
        <quarkus.version>1.0.1.Final</quarkus.version>
        <surefire-plugin.version>2.22.1</surefire-plugin.version>
        <failsafe-plugin.version>2.22.1</failsafe-plugin.version>
        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
        <docker.username>daggerok</docker.username>
        <docker.prefix>quarkus-vertx-template-engines</docker.prefix>
        <docker.repository.prefix>${docker.username}/${docker.prefix}</docker.repository.prefix>
        <dockerfile.location>src/main/docker/Dockerfile.jvm</dockerfile.location>
        <docker-maven-plugin.version>0.31.0</docker-maven-plugin.version>
        <port>8000</port>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-universe-bom</artifactId>
                <version>${quarkus.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web-templ-handlebars</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-vertx-web</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-resteasy</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-smallrye-health</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}0</version>
            <optional>true</optional>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <defaultGoal>clean package</defaultGoal>
        <plugins>
            <plugin>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <version>${quarkus.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-bootstrap-maven-plugin</artifactId>
                <version>${quarkus.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
                <configuration>
                    <systemProperties>
                        <java.util.logging.manager>${java.util.logging.manager}</java.util.logging.manager>
                    </systemProperties>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${failsafe-plugin.version}</version>
                <configuration>
                    <systemProperties>
                        <java.util.logging.manager>${java.util.logging.manager}</java.util.logging.manager>
                    </systemProperties>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
                <configuration>
                    <follow>false</follow>
                    <verbose>true</verbose>
                    <useColor>true</useColor>
                    <logDate>default</logDate>
                    <autoPull>always</autoPull>
                    <removeAll>true</removeAll>
                    <keepRunning>false</keepRunning>
                    <watchInterval>500</watchInterval>
                    <allContainers>true</allContainers>
                    <removeVolumes>true</removeVolumes>
                    <imagePullPolicy>IfNotPresent</imagePullPolicy>
                    <autoCreateCustomNetworks>false</autoCreateCustomNetworks>
                    <images>
                        <image>
                            <name>${docker.repository.prefix}-${project.artifactId}</name>
                            <alias>${project.artifactId}</alias>
                            <build>
                                <tags>
                                    <tag>latest</tag>
                                    <tag>${project.version}</tag>
                                </tags>
                                <contextDir>${project.basedir}</contextDir>
                                <dockerFile>${project.basedir}/${dockerfile.location}</dockerFile>
                                <!--<contextDir>${maven.multiModuleProjectDirectory}/${project.artifactId}</contextDir>
                                <dockerFile>${maven.multiModuleProjectDirectory}/${project.artifactId}/${dockerfile.location}</dockerFile>-->
                            </build>
                            <run>
                                <network>
                                    <mode>custom</mode>
                                    <name>${docker.prefix}</name>
                                    <alias>${project.artifactId}</alias>
                                    <alias>${docker.prefix}.${project.artifactId}</alias>
                                </network>
                                <imagePullPolicy>Never</imagePullPolicy>
                                <hostname>${project.artifactId}</hostname>
                                <env>
                                    <JAVA_OPTS/>
                                    <BACKEND_HOST>backend</BACKEND_HOST>
                                </env>
                                <ports>
                                    <port>${port}:${port}</port>
                                </ports>
                                <volumes>
                                    <bind>
                                        <volume>${project.basedir}/src/main/resources/templates:/work/templates</volume>
                                    </bind>
                                </volumes>
                                <wait>
                                    <http>
                                        <url>http://127.0.0.1:${port}/health</url>
                                        <status>200..299</status>
                                        <method>GET</method>
                                    </http>
                                    <log>Listening on: http</log>
                                    <time>60000</time>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>uber</id>
            <properties>
                <quarkus.package.uber-jar>true</quarkus.package.uber-jar>
            </properties>
        </profile>
        <profile>
            <id>native</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${failsafe-plugin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <systemProperties>
                                        <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                                    </systemProperties>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <properties>
                <quarkus.package.type>native</quarkus.package.type>
                <quarkus.native.container-build>true</quarkus.native.container-build>
                <dockerfile.location>src/main/docker/Dockerfile.native</dockerfile.location>
            </properties>
        </profile>
    </profiles>
</project>
